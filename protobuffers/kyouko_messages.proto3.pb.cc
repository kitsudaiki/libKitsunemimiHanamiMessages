// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: kyouko_messages.proto3

#include "kyouko_messages.proto3.pb.h"

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
class ClusterIO_MessageDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<ClusterIO_Message> _instance;
} _ClusterIO_Message_default_instance_;
static void InitDefaultsscc_info_ClusterIO_Message_kyouko_5fmessages_2eproto3() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_ClusterIO_Message_default_instance_;
    new (ptr) ::ClusterIO_Message();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ClusterIO_Message::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_ClusterIO_Message_kyouko_5fmessages_2eproto3 =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_ClusterIO_Message_kyouko_5fmessages_2eproto3}, {}};

static ::PROTOBUF_NAMESPACE_ID::Metadata file_level_metadata_kyouko_5fmessages_2eproto3[1];
static const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* file_level_enum_descriptors_kyouko_5fmessages_2eproto3[2];
static constexpr ::PROTOBUF_NAMESPACE_ID::ServiceDescriptor const** file_level_service_descriptors_kyouko_5fmessages_2eproto3 = nullptr;

const ::PROTOBUF_NAMESPACE_ID::uint32 TableStruct_kyouko_5fmessages_2eproto3::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::ClusterIO_Message, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::ClusterIO_Message, segmentname_),
  PROTOBUF_FIELD_OFFSET(::ClusterIO_Message, islast_),
  PROTOBUF_FIELD_OFFSET(::ClusterIO_Message, processtype_),
  PROTOBUF_FIELD_OFFSET(::ClusterIO_Message, datatype_),
  PROTOBUF_FIELD_OFFSET(::ClusterIO_Message, numberofvalues_),
  PROTOBUF_FIELD_OFFSET(::ClusterIO_Message, values_),
};
static const ::PROTOBUF_NAMESPACE_ID::internal::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::ClusterIO_Message)},
};

static ::PROTOBUF_NAMESPACE_ID::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::_ClusterIO_Message_default_instance_),
};

const char descriptor_table_protodef_kyouko_5fmessages_2eproto3[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n\026kyouko_messages.proto3\"\262\001\n\021ClusterIO_M"
  "essage\022\023\n\013segmentName\030\001 \001(\t\022\016\n\006isLast\030\002 "
  "\001(\010\022(\n\013processType\030\003 \001(\0162\023.ClusterProces"
  "sType\022\"\n\010dataType\030\004 \001(\0162\020.ClusterDataTyp"
  "e\022\026\n\016numberOfValues\030\005 \001(\004\022\022\n\006values\030\006 \003("
  "\002B\002\020\001*6\n\022ClusterProcessType\022\020\n\014REQUEST_T"
  "YPE\020\000\022\016\n\nLEARN_TYPE\020\001*C\n\017ClusterDataType"
  "\022\016\n\nINPUT_TYPE\020\000\022\017\n\013SHOULD_TYPE\020\001\022\017\n\013OUT"
  "PUT_TYPE\020\002b\006proto3"
  ;
static const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable*const descriptor_table_kyouko_5fmessages_2eproto3_deps[1] = {
};
static ::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase*const descriptor_table_kyouko_5fmessages_2eproto3_sccs[1] = {
  &scc_info_ClusterIO_Message_kyouko_5fmessages_2eproto3.base,
};
static ::PROTOBUF_NAMESPACE_ID::internal::once_flag descriptor_table_kyouko_5fmessages_2eproto3_once;
const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_kyouko_5fmessages_2eproto3 = {
  false, false, descriptor_table_protodef_kyouko_5fmessages_2eproto3, "kyouko_messages.proto3", 338,
  &descriptor_table_kyouko_5fmessages_2eproto3_once, descriptor_table_kyouko_5fmessages_2eproto3_sccs, descriptor_table_kyouko_5fmessages_2eproto3_deps, 1, 0,
  schemas, file_default_instances, TableStruct_kyouko_5fmessages_2eproto3::offsets,
  file_level_metadata_kyouko_5fmessages_2eproto3, 1, file_level_enum_descriptors_kyouko_5fmessages_2eproto3, file_level_service_descriptors_kyouko_5fmessages_2eproto3,
};

// Force running AddDescriptors() at dynamic initialization time.
static bool dynamic_init_dummy_kyouko_5fmessages_2eproto3 = (static_cast<void>(::PROTOBUF_NAMESPACE_ID::internal::AddDescriptors(&descriptor_table_kyouko_5fmessages_2eproto3)), true);
const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* ClusterProcessType_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_kyouko_5fmessages_2eproto3);
  return file_level_enum_descriptors_kyouko_5fmessages_2eproto3[0];
}
bool ClusterProcessType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
      return true;
    default:
      return false;
  }
}

const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* ClusterDataType_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_kyouko_5fmessages_2eproto3);
  return file_level_enum_descriptors_kyouko_5fmessages_2eproto3[1];
}
bool ClusterDataType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
      return true;
    default:
      return false;
  }
}


// ===================================================================

void ClusterIO_Message::InitAsDefaultInstance() {
}
class ClusterIO_Message::_Internal {
 public:
};

ClusterIO_Message::ClusterIO_Message(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena),
  values_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:ClusterIO_Message)
}
ClusterIO_Message::ClusterIO_Message(const ClusterIO_Message& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      values_(from.values_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  segmentname_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_segmentname().empty()) {
    segmentname_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_segmentname(),
      GetArena());
  }
  ::memcpy(&islast_, &from.islast_,
    static_cast<size_t>(reinterpret_cast<char*>(&datatype_) -
    reinterpret_cast<char*>(&islast_)) + sizeof(datatype_));
  // @@protoc_insertion_point(copy_constructor:ClusterIO_Message)
}

void ClusterIO_Message::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_ClusterIO_Message_kyouko_5fmessages_2eproto3.base);
  segmentname_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  ::memset(&islast_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&datatype_) -
      reinterpret_cast<char*>(&islast_)) + sizeof(datatype_));
}

ClusterIO_Message::~ClusterIO_Message() {
  // @@protoc_insertion_point(destructor:ClusterIO_Message)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void ClusterIO_Message::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  segmentname_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void ClusterIO_Message::ArenaDtor(void* object) {
  ClusterIO_Message* _this = reinterpret_cast< ClusterIO_Message* >(object);
  (void)_this;
}
void ClusterIO_Message::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void ClusterIO_Message::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ClusterIO_Message& ClusterIO_Message::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_ClusterIO_Message_kyouko_5fmessages_2eproto3.base);
  return *internal_default_instance();
}


void ClusterIO_Message::Clear() {
// @@protoc_insertion_point(message_clear_start:ClusterIO_Message)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  values_.Clear();
  segmentname_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  ::memset(&islast_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&datatype_) -
      reinterpret_cast<char*>(&islast_)) + sizeof(datatype_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ClusterIO_Message::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string segmentName = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_segmentname();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "ClusterIO_Message.segmentName"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // bool isLast = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          islast_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .ClusterProcessType processType = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 24)) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          _internal_set_processtype(static_cast<::ClusterProcessType>(val));
        } else goto handle_unusual;
        continue;
      // .ClusterDataType dataType = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 32)) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          _internal_set_datatype(static_cast<::ClusterDataType>(val));
        } else goto handle_unusual;
        continue;
      // uint64 numberOfValues = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 40)) {
          numberofvalues_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // repeated float values = 6 [packed = true];
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 50)) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::PackedFloatParser(_internal_mutable_values(), ptr, ctx);
          CHK_(ptr);
        } else if (static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 53) {
          _internal_add_values(::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<float>(ptr));
          ptr += sizeof(float);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* ClusterIO_Message::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ClusterIO_Message)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string segmentName = 1;
  if (this->segmentname().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_segmentname().data(), static_cast<int>(this->_internal_segmentname().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "ClusterIO_Message.segmentName");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_segmentname(), target);
  }

  // bool isLast = 2;
  if (this->islast() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(2, this->_internal_islast(), target);
  }

  // .ClusterProcessType processType = 3;
  if (this->processtype() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      3, this->_internal_processtype(), target);
  }

  // .ClusterDataType dataType = 4;
  if (this->datatype() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      4, this->_internal_datatype(), target);
  }

  // uint64 numberOfValues = 5;
  if (this->numberofvalues() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt64ToArray(5, this->_internal_numberofvalues(), target);
  }

  // repeated float values = 6 [packed = true];
  if (this->_internal_values_size() > 0) {
    target = stream->WriteFixedPacked(6, _internal_values(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ClusterIO_Message)
  return target;
}

size_t ClusterIO_Message::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ClusterIO_Message)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated float values = 6 [packed = true];
  {
    unsigned int count = static_cast<unsigned int>(this->_internal_values_size());
    size_t data_size = 4UL * count;
    if (data_size > 0) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
            static_cast<::PROTOBUF_NAMESPACE_ID::int32>(data_size));
    }
    int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(data_size);
    _values_cached_byte_size_.store(cached_size,
                                    std::memory_order_relaxed);
    total_size += data_size;
  }

  // string segmentName = 1;
  if (this->segmentname().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_segmentname());
  }

  // bool isLast = 2;
  if (this->islast() != 0) {
    total_size += 1 + 1;
  }

  // .ClusterProcessType processType = 3;
  if (this->processtype() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->_internal_processtype());
  }

  // uint64 numberOfValues = 5;
  if (this->numberofvalues() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt64Size(
        this->_internal_numberofvalues());
  }

  // .ClusterDataType dataType = 4;
  if (this->datatype() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->_internal_datatype());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ClusterIO_Message::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ClusterIO_Message)
  GOOGLE_DCHECK_NE(&from, this);
  const ClusterIO_Message* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<ClusterIO_Message>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ClusterIO_Message)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ClusterIO_Message)
    MergeFrom(*source);
  }
}

void ClusterIO_Message::MergeFrom(const ClusterIO_Message& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ClusterIO_Message)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  values_.MergeFrom(from.values_);
  if (from.segmentname().size() > 0) {
    _internal_set_segmentname(from._internal_segmentname());
  }
  if (from.islast() != 0) {
    _internal_set_islast(from._internal_islast());
  }
  if (from.processtype() != 0) {
    _internal_set_processtype(from._internal_processtype());
  }
  if (from.numberofvalues() != 0) {
    _internal_set_numberofvalues(from._internal_numberofvalues());
  }
  if (from.datatype() != 0) {
    _internal_set_datatype(from._internal_datatype());
  }
}

void ClusterIO_Message::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ClusterIO_Message)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ClusterIO_Message::CopyFrom(const ClusterIO_Message& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ClusterIO_Message)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ClusterIO_Message::IsInitialized() const {
  return true;
}

void ClusterIO_Message::InternalSwap(ClusterIO_Message* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  values_.InternalSwap(&other->values_);
  segmentname_.Swap(&other->segmentname_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(ClusterIO_Message, datatype_)
      + sizeof(ClusterIO_Message::datatype_)
      - PROTOBUF_FIELD_OFFSET(ClusterIO_Message, islast_)>(
          reinterpret_cast<char*>(&islast_),
          reinterpret_cast<char*>(&other->islast_));
}

::PROTOBUF_NAMESPACE_ID::Metadata ClusterIO_Message::GetMetadata() const {
  return GetMetadataStatic();
}


// @@protoc_insertion_point(namespace_scope)
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::ClusterIO_Message* Arena::CreateMaybeMessage< ::ClusterIO_Message >(Arena* arena) {
  return Arena::CreateMessageInternal< ::ClusterIO_Message >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
